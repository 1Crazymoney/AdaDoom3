Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
    pCreateInfo:                    const VkInstanceCreateInfo* = 000000000022F220:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
        pNext:                          const void* = 000000000022F200
        flags:                          VkInstanceCreateFlags = 0
        pApplicationInfo:               const VkApplicationInfo* = 000000000022F3F0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_APPLICATION_INFO (0)
            pNext:                          const void* = NULL
            pApplicationName:               const char* = "DOOM"
            applicationVersion:             uint32_t = 4194304
            pEngineName:                    const char* = "DOOM"
            engineVersion:                  uint32_t = 0
            apiVersion:                     uint32_t = 4194304
        enabledLayerCount:              uint32_t = 1
        ppEnabledLayerNames:            const char* const* = 000000000022F468
            ppEnabledLayerNames[0]:         const char* const = "VK_LAYER_LUNARG_api_dump"
        enabledExtensionCount:          uint32_t = 2
        ppEnabledExtensionNames:        const char* const* = 000000000022F470
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_surface"
            ppEnabledExtensionNames[1]:     const char* const = "VK_KHR_win32_surface"
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pInstance:                      VkInstance* = 0000000001601BC0

Thread 0, Frame 0:
vkCreateWin32SurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pCreateInfo:                    const VkWin32SurfaceCreateInfoKHR* = 000000000022E170:
        sType:                          VkStructureType = UNKNOWN (1000009000)
        pNext:                          const void* = NULL
        flags:                          VkWin32SurfaceCreateFlagsKHR = 0
        hinstance:                      HINSTANCE = 0000000000400000
        hwnd:                           HWND = 00000000000A0250
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSurface:                       VkSurfaceKHR* = 000000000540E610

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000000052C5690
        pPhysicalDevices[0]:            VkPhysicalDevice = 0000000004A3FD40

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pFeatures:                      VkPhysicalDeviceFeatures* = 000000000527D244:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 0
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000000052C56A0
        pPhysicalDevices[0]:            VkPhysicalDevice = 0000000004A3FD40

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pFeatures:                      VkPhysicalDeviceFeatures* = 000000000527D244:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 0
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 000000000022DD60:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 000000000022DE74
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 000000000022DE88:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 000000000022DF64
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 000000000022DF74
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 000000000022DFA0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 000000000022DFA8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 000000000022E044
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 000000000022E04C
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 000000000022E080:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000000052C56B0
        pPhysicalDevices[0]:            VkPhysicalDevice = 0000000004A3FD40

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pFeatures:                      VkPhysicalDeviceFeatures* = 000000000527D244:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 0
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0000000001601BC0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000000052C5680
        pPhysicalDevices[0]:            VkPhysicalDevice = 0000000004A3FD40

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pFeatures:                      VkPhysicalDeviceFeatures* = 000000000527D244:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 0
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 000000000022DD40:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 000000000022DE54
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 000000000022DE68:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 000000000022DF44
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 000000000022DF54
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 000000000022DF80
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 000000000022DF88
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 000000000022E024
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 000000000022E02C
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 000000000022E060:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pQueueFamilyPropertyCount:      uint32_t* = 2
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pQueueFamilyPropertyCount:      uint32_t* = 2
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 000000000022E138
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 000000000022E138:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 000000000022E144:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 000000000022E150:
            queueFlags:                     VkQueueFlags = 4 (VK_QUEUE_TRANSFER_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 000000000022E15C:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 000000000540E610
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    surface:                        VkSurfaceKHR = 000000000540E610
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    surface:                        VkSurfaceKHR = 000000000540E610
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = 000000000022E178
        pSurfaceFormats[0]:             VkSurfaceFormatKHR = 000000000022E178:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]:             VkSurfaceFormatKHR = 000000000022E180:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 000000000022F290:
        linearTilingFeatures:           VkFormatFeatureFlags = 54273 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        optimalTilingFeatures:          VkFormatFeatureFlags = 54785 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT_S8_UINT (130)
    pFormatProperties:              VkFormatProperties* = 000000000022F290:
        linearTilingFeatures:           VkFormatFeatureFlags = 54273 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        optimalTilingFeatures:          VkFormatFeatureFlags = 54785 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
    pFormatProperties:              VkFormatProperties* = 000000000022F290:
        linearTilingFeatures:           VkFormatFeatureFlags = 54273 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        optimalTilingFeatures:          VkFormatFeatureFlags = 54785 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    surface:                        VkSurfaceKHR = 000000000540E610
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    surface:                        VkSurfaceKHR = 000000000540E610
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = 000000000022E198
        pPresentModes[0]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[1]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)
        pPresentModes[2]:               VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    surface:                        VkSurfaceKHR = 000000000540E610
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 000000000022F250:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 000000000022F258:
            width:                          uint32_t = 792
            height:                         uint32_t = 573
        minImageExtent:                 VkExtent2D = 000000000022F260:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
        maxImageExtent:                 VkExtent2D = 000000000022F268:
            width:                          uint32_t = 16384
            height:                         uint32_t = 16384
        maxImageArrayLayers:            uint32_t = 2048
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 000000000022EEF0:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 000000000022F004
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 000000000022F018:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 000000000022F0F4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 000000000022F104
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 000000000022F130
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 000000000022F138
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 000000000022F1D4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 000000000022F1DC
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 000000000022F210:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 000000000022EAC0:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 000000000022EAC4
            memoryTypes[0]:                 VkMemoryType = 000000000022EAC4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 000000000022EACC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 000000000022EAD4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 000000000022EADC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 000000000022EAE4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 000000000022EAEC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 000000000022EAF4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 000000000022EAFC:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 000000000022EB04:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[9]:                 VkMemoryType = 000000000022EB0C:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 000000000022EB14:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[11]:                VkMemoryType = 000000000022EB1C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[12]:                VkMemoryType = 000000000022EB24:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[13]:                VkMemoryType = 000000000022EB2C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[14]:                VkMemoryType = 000000000022EB34:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[15]:                VkMemoryType = 000000000022EB3C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[16]:                VkMemoryType = 000000000022EB44:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[17]:                VkMemoryType = 000000000022EB4C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[18]:                VkMemoryType = 000000000022EB54:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[19]:                VkMemoryType = 000000000022EB5C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[20]:                VkMemoryType = 000000000022EB64:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[21]:                VkMemoryType = 000000000022EB6C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[22]:                VkMemoryType = 000000000022EB74:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[23]:                VkMemoryType = 000000000022EB7C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[24]:                VkMemoryType = 000000000022EB84:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[25]:                VkMemoryType = 000000000022EB8C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[26]:                VkMemoryType = 000000000022EB94:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[27]:                VkMemoryType = 000000000022EB9C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[28]:                VkMemoryType = 000000000022EBA4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[29]:                VkMemoryType = 000000000022EBAC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[30]:                VkMemoryType = 000000000022EBB4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[31]:                VkMemoryType = 000000000022EBBC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
        memoryHeapCount:                uint32_t = 2
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 000000000022EBC8
            memoryHeaps[0]:                 VkMemoryHeap = 000000000022EBC8:
                size:                           VkDeviceSize = 4202954752
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 000000000022EBD8:
                size:                           VkDeviceSize = 33744224256
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 000000000022EBE8:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[3]:                 VkMemoryHeap = 000000000022EBF8:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[4]:                 VkMemoryHeap = 000000000022EC08:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[5]:                 VkMemoryHeap = 000000000022EC18:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[6]:                 VkMemoryHeap = 000000000022EC28:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[7]:                 VkMemoryHeap = 000000000022EC38:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[8]:                 VkMemoryHeap = 000000000022EC48:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[9]:                 VkMemoryHeap = 000000000022EC58:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[10]:                VkMemoryHeap = 000000000022EC68:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[11]:                VkMemoryHeap = 000000000022EC78:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[12]:                VkMemoryHeap = 000000000022EC88:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[13]:                VkMemoryHeap = 000000000022EC98:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[14]:                VkMemoryHeap = 000000000022ECA8:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[15]:                VkMemoryHeap = 000000000022ECB8:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pCreateInfo:                    const VkDeviceCreateInfo* = 000000000022E050:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
        pNext:                          const void* = 000000000022E0A0
        flags:                          VkDeviceCreateFlags = 0
        queueCreateInfoCount:           uint32_t = 1
        pQueueCreateInfos:              const VkDeviceQueueCreateInfo* = 000000000022E808
            pQueueCreateInfos[0]:           const VkDeviceQueueCreateInfo = 000000000022E808:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 0
                queueCount:                     uint32_t = 1
                pQueuePriorities:               const float* = 000000000022E8BC
                    pQueuePriorities[0]:            const float = 1
        enabledLayerCount:              uint32_t = 0
        ppEnabledLayerNames:            const char* const* = NULL
        enabledExtensionCount:          uint32_t = 1
        ppEnabledExtensionNames:        const char* const* = 000000000022E718
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_swapchain"
        pEnabledFeatures:               const VkPhysicalDeviceFeatures* = 000000000022E720:
            robustBufferAccess:             VkBool32 = 0
            fullDrawIndexUint32:            VkBool32 = 0
            imageCubeArray:                 VkBool32 = 0
            independentBlend:               VkBool32 = 0
            geometryShader:                 VkBool32 = 1
            tessellationShader:             VkBool32 = 0
            sampleRateShading:              VkBool32 = 0
            dualSrcBlend:                   VkBool32 = 0
            logicOp:                        VkBool32 = 0
            multiDrawIndirect:              VkBool32 = 0
            drawIndirectFirstInstance:      VkBool32 = 0
            depthClamp:                     VkBool32 = 0
            depthBiasClamp:                 VkBool32 = 0
            fillModeNonSolid:               VkBool32 = 0
            depthBounds:                    VkBool32 = 0
            wideLines:                      VkBool32 = 0
            largePoints:                    VkBool32 = 0
            alphaToOne:                     VkBool32 = 0
            multiViewport:                  VkBool32 = 0
            samplerAnisotropy:              VkBool32 = 0
            textureCompressionETC2:         VkBool32 = 0
            textureCompressionASTC_LDR:     VkBool32 = 0
            textureCompressionBC:           VkBool32 = 0
            occlusionQueryPrecise:          VkBool32 = 0
            pipelineStatisticsQuery:        VkBool32 = 0
            vertexPipelineStoresAndAtomics: VkBool32 = 0
            fragmentStoresAndAtomics:       VkBool32 = 0
            shaderTessellationAndGeometryPointSize: VkBool32 = 1
            shaderImageGatherExtended:      VkBool32 = 0
            shaderStorageImageExtendedFormats: VkBool32 = 0
            shaderStorageImageMultisample:  VkBool32 = 0
            shaderStorageImageReadWithoutFormat: VkBool32 = 0
            shaderStorageImageWriteWithoutFormat: VkBool32 = 0
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 0
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 0
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 0
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 0
            shaderClipDistance:             VkBool32 = 1
            shaderCullDistance:             VkBool32 = 1
            shaderFloat64:                  VkBool32 = 0
            shaderInt64:                    VkBool32 = 0
            shaderInt16:                    VkBool32 = 0
            shaderResourceResidency:        VkBool32 = 0
            shaderResourceMinLod:           VkBool32 = 0
            sparseBinding:                  VkBool32 = 0
            sparseResidencyBuffer:          VkBool32 = 0
            sparseResidencyImage2D:         VkBool32 = 0
            sparseResidencyImage3D:         VkBool32 = 0
            sparseResidency2Samples:        VkBool32 = 0
            sparseResidency4Samples:        VkBool32 = 0
            sparseResidency8Samples:        VkBool32 = 0
            sparseResidency16Samples:       VkBool32 = 0
            sparseResidencyAliased:         VkBool32 = 0
            variableMultisampleRate:        VkBool32 = 0
            inheritedQueries:               VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDevice:                        VkDevice* = 00000000052D6E50

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 0000000005339B28:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0000000005339C3C
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 0000000005339C50:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0000000005339D2C
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0000000005339D3C
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0000000005339D68
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0000000005339D70
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0000000005339E0C
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 0000000005339E14
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0000000005339E48:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pQueueFamilyPropertyCount:      uint32_t* = 2
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pQueueFamilyPropertyCount:      uint32_t* = 2
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 00000000053D2220
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 00000000053D2220:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 00000000053D222C:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 00000000053D2238:
            queueFlags:                     VkQueueFlags = 4 (VK_QUEUE_TRANSFER_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 00000000053D2244:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0000000005339E78:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0000000005339E7C
            memoryTypes[0]:                 VkMemoryType = 0000000005339E7C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0000000005339E84:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0000000005339E8C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0000000005339E94:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0000000005339E9C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0000000005339EA4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0000000005339EAC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0000000005339EB4:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0000000005339EBC:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[9]:                 VkMemoryType = 0000000005339EC4:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0000000005339ECC:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[11]:                VkMemoryType = 0000000005339ED4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[12]:                VkMemoryType = 0000000005339EDC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[13]:                VkMemoryType = 0000000005339EE4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[14]:                VkMemoryType = 0000000005339EEC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[15]:                VkMemoryType = 0000000005339EF4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[16]:                VkMemoryType = 0000000005339EFC:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[17]:                VkMemoryType = 0000000005339F04:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[18]:                VkMemoryType = 0000000005339F0C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[19]:                VkMemoryType = 0000000005339F14:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[20]:                VkMemoryType = 0000000005339F1C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[21]:                VkMemoryType = 0000000005339F24:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[22]:                VkMemoryType = 0000000005339F2C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[23]:                VkMemoryType = 0000000005339F34:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[24]:                VkMemoryType = 0000000005339F3C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[25]:                VkMemoryType = 0000000005339F44:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[26]:                VkMemoryType = 0000000005339F4C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[27]:                VkMemoryType = 0000000005339F54:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[28]:                VkMemoryType = 0000000005339F5C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[29]:                VkMemoryType = 0000000005339F64:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[30]:                VkMemoryType = 0000000005339F6C:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
            memoryTypes[31]:                VkMemoryType = 0000000005339F74:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 0
        memoryHeapCount:                uint32_t = 2
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0000000005339F80
            memoryHeaps[0]:                 VkMemoryHeap = 0000000005339F80:
                size:                           VkDeviceSize = 4202954752
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0000000005339F90:
                size:                           VkDeviceSize = 33744224256
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0000000005339FA0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[3]:                 VkMemoryHeap = 0000000005339FB0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[4]:                 VkMemoryHeap = 0000000005339FC0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[5]:                 VkMemoryHeap = 0000000005339FD0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[6]:                 VkMemoryHeap = 0000000005339FE0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[7]:                 VkMemoryHeap = 0000000005339FF0:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[8]:                 VkMemoryHeap = 000000000533A000:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[9]:                 VkMemoryHeap = 000000000533A010:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[10]:                VkMemoryHeap = 000000000533A020:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[11]:                VkMemoryHeap = 000000000533A030:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[12]:                VkMemoryHeap = 000000000533A040:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[13]:                VkMemoryHeap = 000000000533A050:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[14]:                VkMemoryHeap = 000000000533A060:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[15]:                VkMemoryHeap = 000000000533A070:
                size:                           VkDeviceSize = 0
                flags:                          VkMemoryHeapFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 000000000533A080:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 000000000533A194
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 000000000533A1A8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 000000000533A284
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 000000000533A294
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 000000000533A2C0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 000000000533A2C8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 000000000533A364
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 000000000533A36C
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 000000000533A3A0:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    pProperties:                    VkPhysicalDeviceProperties* = 000000000022DAE0:
        apiVersion:                     uint32_t = 4194346
        driverVersion:                  uint32_t = 1602764800
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5058
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 970"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 000000000022DBF4
            pipelineCacheUUID[0]:           uint8_t = 168
            pipelineCacheUUID[1]:           uint8_t = 248
            pipelineCacheUUID[2]:           uint8_t = 90
            pipelineCacheUUID[3]:           uint8_t = 180
            pipelineCacheUUID[4]:           uint8_t = 138
            pipelineCacheUUID[5]:           uint8_t = 129
            pipelineCacheUUID[6]:           uint8_t = 15
            pipelineCacheUUID[7]:           uint8_t = 6
            pipelineCacheUUID[8]:           uint8_t = 234
            pipelineCacheUUID[9]:           uint8_t = 170
            pipelineCacheUUID[10]:          uint8_t = 52
            pipelineCacheUUID[11]:          uint8_t = 116
            pipelineCacheUUID[12]:          uint8_t = 200
            pipelineCacheUUID[13]:          uint8_t = 195
            pipelineCacheUUID[14]:          uint8_t = 80
            pipelineCacheUUID[15]:          uint8_t = 77
        limits:                         VkPhysicalDeviceLimits = 000000000022DC08:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 2147483647
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4096
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 18446744073709551615
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 4000
            maxPerStageDescriptorUniformBuffers: uint32_t = 12
            maxPerStageDescriptorStorageBuffers: uint32_t = 16
            maxPerStageDescriptorSampledImages: uint32_t = 8192
            maxPerStageDescriptorStorageImages: uint32_t = 8192
            maxPerStageDescriptorInputAttachments: uint32_t = 8
            maxPerStageResources:           uint32_t = 24612
            maxDescriptorSetSamplers:       uint32_t = 4000
            maxDescriptorSetUniformBuffers: uint32_t = 72
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 72
            maxDescriptorSetStorageBuffers: uint32_t = 96
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 96
            maxDescriptorSetSampledImages:  uint32_t = 49152
            maxDescriptorSetStorageImages:  uint32_t = 49152
            maxDescriptorSetInputAttachments: uint32_t = 8
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 000000000022DCE4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 000000000022DCF4
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 000000000022DD20
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 000000000022DD28
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 32
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 000000000022DDC4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 189.875
            lineWidthRange:                 float[2] = 000000000022DDCC
                lineWidthRange[0]:              float = 0.5
                lineWidthRange[1]:              float = 10
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 000000000022DE00:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000000052D6E50
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0000000005299D20

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000000052D6E50
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0000000005299D20

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 0000000004A3E3C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorSetLayoutCreateFlags = 0
        bindingCount:                   uint32_t = 2
        pBindings:                      const VkDescriptorSetLayoutBinding* = 00000000053D2128
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 00000000053D2128:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 1 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[1]:                   const VkDescriptorSetLayoutBinding = 00000000053D2140:
                binding:                        uint32_t = 1
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 16 (VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                pImmutableSamplers:             const VkSampler* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 000000000534B2D0

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 000000000022E0E0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 1352
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 000000000529A7E0

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 000000000022E0E0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 608
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 000000000529A860

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 000000000022E670:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 2 (VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 00000000052D0030

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 000000000022E600:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 000000000529A960

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 000000000022E600:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 000000000529AA60

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkSwapchainCreateInfoKHR* = 00000000052947E0:
        sType:                          VkStructureType = UNKNOWN (1000001000)
        pNext:                          const void* = NULL
        flags:                          VkSwapchainCreateFlagsKHR = 0
        surface:                        VkSurfaceKHR = 000000000540E610
        minImageCount:                  uint32_t = 3
        imageFormat:                    VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        imageColorSpace:                VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:                    VkExtent2D = 000000000529480C:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
        imageArrayLayers:               uint32_t = 1
        imageUsage:                     VkImageUsageFlags = 16 (VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:               VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        preTransform:                   VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha:                 VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:                    VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)
        clipped:                        VkBool32 = 1
        oldSwapchain:                   VkSwapchainKHR = 0000000000000000
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSwapchain:                     VkSwapchainKHR* = 0000000005434970

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000005434970
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = 0000000000AD9510
        pSwapchainImages[0]:            VkImage = 000000000542F440
        pSwapchainImages[1]:            VkImage = 000000000542F5B0
        pSwapchainImages[2]:            VkImage = 000000000542F720

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 0000000005299120:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542F440
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 0000000005299148:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0000000005299158:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005295D50

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 0000000005299120:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542F5B0
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 0000000005299148:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0000000005299158:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005295EB0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 0000000005299120:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542F720
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 0000000005299148:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0000000005299158:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005296010

Thread 0, Frame 0:
vkCreateRenderPass(device, pCreateInfo, pAllocator, pRenderPass) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkRenderPassCreateInfo* = 000000000022DA80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO (38)
        pNext:                          const void* = NULL
        flags:                          VkRenderPassCreateFlags = 0
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkAttachmentDescription* = 000000000022DBE8
            pAttachments[0]:                const VkAttachmentDescription = 000000000022DBE8:
                flags:                          VkAttachmentDescriptionFlags = 0
                format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
                samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                stencilLoadOp:                  VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE (2)
                stencilStoreOp:                 VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                finalLayout:                    VkImageLayout = UNKNOWN (1000001002)
        subpassCount:                   uint32_t = 1
        pSubpasses:                     const VkSubpassDescription* = 000000000022DCE8
            pSubpasses[0]:                  const VkSubpassDescription = 000000000022DCE8:
                flags:                          VkSubpassDescriptionFlags = 0
                pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
                inputAttachmentCount:           uint32_t = 0
                pInputAttachments:              const VkAttachmentReference* = NULL
                colorAttachmentCount:           uint32_t = 1
                pColorAttachments:              const VkAttachmentReference* = 000000000022E008
                    pColorAttachments[0]:           const VkAttachmentReference = 000000000022E008:
                        attachment:                     uint32_t = 0
                        layout:                         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                pResolveAttachments:            const VkAttachmentReference* = NULL
                pDepthStencilAttachment:        const VkAttachmentReference* = NULL
                preserveAttachmentCount:        uint32_t = 0
                pPreserveAttachments:           const uint32_t* = NULL
        dependencyCount:                uint32_t = 1
        pDependencies:                  const VkSubpassDependency* = 000000000022D838
            pDependencies[0]:               const VkSubpassDependency = 000000000022D838:
                srcSubpass:                     uint32_t = 4294967295
                dstSubpass:                     uint32_t = 0
                srcStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags = 0
                dstAccessMask:                  VkAccessFlags = 384 (VK_ACCESS_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
                dependencyFlags:                VkDependencyFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pRenderPass:                    VkRenderPass* = 00000000052FBC40

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 00000000053D1020:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 0
        pSetLayouts:                    const VkDescriptorSetLayout* = NULL
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 00000000053B6860

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 0000000005299E68
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 0000000005299E68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 0000000005294D98
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 0000000005294D98:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                    module:                         VkShaderModule = 000000000529A7E0
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 0000000005294DC8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                    module:                         VkShaderModule = 000000000529A860
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 00000000053D1FA0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 0
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = NULL
                vertexAttributeDescriptionCount: uint32_t = 0
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = NULL
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 0000000004A3C710:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 00000000053D0E20:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = UNUSED
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = UNUSED
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 000000000527B380:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 2 (VK_CULL_MODE_BACK_BIT | VK_CULL_MODE_FRONT_AND_BACK)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 00000000053D1C60:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 0
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 0000000005294E00:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 1
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_LESS (1)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 0000000005294E28:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 0000000005294E44:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 0
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 00000000053D1CE0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 0000000004A3C6E0
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 0000000004A3C6E0:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 00000000053D1D08
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = NULL
            layout:                         VkPipelineLayout = 00000000053B6860
            renderPass:                     VkRenderPass = 00000000052FBC40
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 0000000000AD94C8
        pPipelines[0]:                  VkPipeline = 0000000005445C50

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
    pFormatProperties:              VkFormatProperties* = 000000000542A020:
        linearTilingFeatures:           VkFormatFeatureFlags = 54273 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        optimalTilingFeatures:          VkFormatFeatureFlags = 54785 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0000000004A3C650:
        maxExtent:                      VkExtent3D = 0000000004A3C650:
            width:                          uint32_t = 16384
            height:                         uint32_t = 16384
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 15
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageCreateInfo* = 000000000527A8C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
        extent:                         VkExtent3D = 000000000527A8DC:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_PREINITIALIZED (8)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 000000000542F890

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000000052D6E50
    image:                          VkImage = 000000000542F890
    pMemoryRequirements:            VkMemoryRequirements* = 000000000022D670:
        size:                           VkDeviceSize = 8576
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 136

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0000000004A3C3E0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 8576
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0000000005296170

Thread 0, Frame 0:
vkBindImageMemory(device, image, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    image:                          VkImage = 000000000542F890
    memory:                         VkDeviceMemory = 0000000005296170
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 000000000527AAA0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542F890
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
        components:                     VkComponentMapping = 000000000527AAC8:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 000000000527AAD8:
            aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005296220

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 000000000527B740:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FBC40
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1A50
            pAttachments[0]:                const VkImageView = 0000000005295D50
        width:                          uint32_t = 1
        height:                         uint32_t = 1
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000052D28B0

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 000000000527B740:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FBC40
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1AE0
            pAttachments[0]:                const VkImageView = 0000000005295EB0
        width:                          uint32_t = 1
        height:                         uint32_t = 1
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000052D2B80

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 000000000527B740:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FBC40
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1B10
            pAttachments[0]:                const VkImageView = 0000000005296010
        width:                          uint32_t = 1
        height:                         uint32_t = 1
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000052D2D30

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0000000004A3BF30:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 00000000052D0030
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 3
    pCommandBuffers:                VkCommandBuffer* = 0000000000AD9550
        pCommandBuffers[0]:             VkCommandBuffer = 00000000053BA550
        pCommandBuffers[1]:             VkCommandBuffer = 00000000053BA9C0
        pCommandBuffers[2]:             VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BA80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 000000000527B740:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FBC40
        framebuffer:                    VkFramebuffer = 00000000052D28B0
        renderArea:                     VkRect2D = 000000000527B760:
            offset:                         VkOffset2D = 000000000527B760:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 000000000527B768:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 00000000054298E0
            pClearValues[0]:                const VkClearValue = 00000000054298E0 (Union):
                color:                          VkClearColorValue = 00000000054298E0 (Union):
                    float32:                        float[4] = 00000000054298E0
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 00000000054298E0
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 00000000054298E0
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 00000000054298E0:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0000000005445C50

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA550

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BA80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 000000000527B790:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FBC40
        framebuffer:                    VkFramebuffer = 00000000052D2B80
        renderArea:                     VkRect2D = 000000000527B7B0:
            offset:                         VkOffset2D = 000000000527B7B0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 000000000527B7B8:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 000000000542B280
            pClearValues[0]:                const VkClearValue = 000000000542B280 (Union):
                color:                          VkClearColorValue = 000000000542B280 (Union):
                    float32:                        float[4] = 000000000542B280
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 000000000542B280
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 000000000542B280
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 000000000542B280:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0000000005445C50

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA9C0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BA80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0000000005279060:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FBC40
        framebuffer:                    VkFramebuffer = 00000000052D2D30
        renderArea:                     VkRect2D = 0000000005279080:
            offset:                         VkOffset2D = 0000000005279080:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0000000005279088:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0000000005429200
            pClearValues[0]:                const VkClearValue = 0000000005429200 (Union):
                color:                          VkClearColorValue = 0000000005429200 (Union):
                    float32:                        float[4] = 0000000005429200
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0000000005429200
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0000000005429200
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0000000005429200:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0000000005445C50

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkSwapchainCreateInfoKHR* = 00000000052950A0:
        sType:                          VkStructureType = UNKNOWN (1000001000)
        pNext:                          const void* = NULL
        flags:                          VkSwapchainCreateFlagsKHR = 0
        surface:                        VkSurfaceKHR = 000000000540E610
        minImageCount:                  uint32_t = 3
        imageFormat:                    VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        imageColorSpace:                VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:                    VkExtent2D = 00000000052950CC:
            width:                          uint32_t = 800
            height:                         uint32_t = 600
        imageArrayLayers:               uint32_t = 1
        imageUsage:                     VkImageUsageFlags = 16 (VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:               VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        preTransform:                   VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha:                 VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:                    VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)
        clipped:                        VkBool32 = 1
        oldSwapchain:                   VkSwapchainKHR = 0000000005434970
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSwapchain:                     VkSwapchainKHR* = 0000000004D4B7A0

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = 0000000000AD9510
        pSwapchainImages[0]:            VkImage = 000000000542FA00
        pSwapchainImages[1]:            VkImage = 000000000542FB70
        pSwapchainImages[2]:            VkImage = 000000000542FCE0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 000000000527AF20:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542FA00
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 000000000527AF48:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 000000000527AF58:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005296590

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 000000000527AF20:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542FB70
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 000000000527AF48:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 000000000527AF58:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 00000000052966F0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 000000000527AF20:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542FCE0
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 000000000527AF48:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 000000000527AF58:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005296850

Thread 0, Frame 0:
vkCreateRenderPass(device, pCreateInfo, pAllocator, pRenderPass) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkRenderPassCreateInfo* = 000000000022ED40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO (38)
        pNext:                          const void* = NULL
        flags:                          VkRenderPassCreateFlags = 0
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkAttachmentDescription* = 000000000022EEA8
            pAttachments[0]:                const VkAttachmentDescription = 000000000022EEA8:
                flags:                          VkAttachmentDescriptionFlags = 0
                format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
                samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                stencilLoadOp:                  VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE (2)
                stencilStoreOp:                 VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                finalLayout:                    VkImageLayout = UNKNOWN (1000001002)
        subpassCount:                   uint32_t = 1
        pSubpasses:                     const VkSubpassDescription* = 000000000022EFA8
            pSubpasses[0]:                  const VkSubpassDescription = 000000000022EFA8:
                flags:                          VkSubpassDescriptionFlags = 0
                pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
                inputAttachmentCount:           uint32_t = 0
                pInputAttachments:              const VkAttachmentReference* = NULL
                colorAttachmentCount:           uint32_t = 1
                pColorAttachments:              const VkAttachmentReference* = 000000000022F2C8
                    pColorAttachments[0]:           const VkAttachmentReference = 000000000022F2C8:
                        attachment:                     uint32_t = 0
                        layout:                         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                pResolveAttachments:            const VkAttachmentReference* = NULL
                pDepthStencilAttachment:        const VkAttachmentReference* = NULL
                preserveAttachmentCount:        uint32_t = 0
                pPreserveAttachments:           const uint32_t* = NULL
        dependencyCount:                uint32_t = 1
        pDependencies:                  const VkSubpassDependency* = 000000000022EAF8
            pDependencies[0]:               const VkSubpassDependency = 000000000022EAF8:
                srcSubpass:                     uint32_t = 4294967295
                dstSubpass:                     uint32_t = 0
                srcStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags = 0
                dstAccessMask:                  VkAccessFlags = 384 (VK_ACCESS_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
                dependencyFlags:                VkDependencyFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pRenderPass:                    VkRenderPass* = 00000000052FB940

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 00000000053D0660:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 0
        pSetLayouts:                    const VkDescriptorSetLayout* = NULL
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 00000000053C7B60

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 0000000005299F08
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 0000000005299F08:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 0000000005295348
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 0000000005295348:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                    module:                         VkShaderModule = 000000000529A7E0
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 0000000005295378:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_ALL_GRAPHICS | VK_SHADER_STAGE_ALL)
                    module:                         VkShaderModule = 000000000529A860
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 00000000053D0520:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 0
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = NULL
                vertexAttributeDescriptionCount: uint32_t = 0
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = NULL
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 0000000004A3AEB0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 00000000053D04E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = UNUSED
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = UNUSED
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 00000000052791F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 2 (VK_CULL_MODE_BACK_BIT | VK_CULL_MODE_FRONT_AND_BACK)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 00000000053D04A0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 0
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 00000000052953B0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 1
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_LESS (1)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 00000000052953D8:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 00000000052953F4:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 0
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 00000000053D0460:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 0000000004A3AE80
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 0000000004A3AE80:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 00000000053D0488
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = NULL
            layout:                         VkPipelineLayout = 00000000053C7B60
            renderPass:                     VkRenderPass = 00000000052FB940
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 0000000000AD94C8
        pPipelines[0]:                  VkPipeline = 00000000053B8270

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
    pFormatProperties:              VkFormatProperties* = 000000000542AA40:
        linearTilingFeatures:           VkFormatFeatureFlags = 54273 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        optimalTilingFeatures:          VkFormatFeatureFlags = 54785 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR | VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0000000004A3FD40
    format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0000000004A3ADF0:
        maxExtent:                      VkExtent3D = 0000000004A3ADF0:
            width:                          uint32_t = 16384
            height:                         uint32_t = 16384
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 15
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageCreateInfo* = 0000000005278920:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
        extent:                         VkExtent3D = 000000000527893C:
            width:                          uint32_t = 800
            height:                         uint32_t = 600
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_PREINITIALIZED (8)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 000000000542FE50

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000000052D6E50
    image:                          VkImage = 000000000542FE50
    pMemoryRequirements:            VkMemoryRequirements* = 000000000022E930:
        size:                           VkDeviceSize = 2208896
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 136

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0000000004A3ABE0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 2208896
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 00000000052969B0

Thread 0, Frame 0:
vkBindImageMemory(device, image, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    image:                          VkImage = 000000000542FE50
    memory:                         VkDeviceMemory = 00000000052969B0
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkImageViewCreateInfo* = 0000000005278A40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 000000000542FE50
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D24_UNORM_S8_UINT (129)
        components:                     VkComponentMapping = 0000000005278A68:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0000000005278A78:
            aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0000000005296A60

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0000000005279470:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FB940
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1C20
            pAttachments[0]:                const VkImageView = 0000000005296590
        width:                          uint32_t = 800
        height:                         uint32_t = 600
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000053C0A60

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0000000005279470:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FB940
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1C70
            pAttachments[0]:                const VkImageView = 00000000052966F0
        width:                          uint32_t = 800
        height:                         uint32_t = 600
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000053C0D30

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0000000005279470:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 00000000052FB940
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 00000000052C1CA0
            pAttachments[0]:                const VkImageView = 0000000005296850
        width:                          uint32_t = 800
        height:                         uint32_t = 600
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 00000000053C0EE0

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 00000000052D6E50
    commandPool:                    VkCommandPool = 00000000052D0030
    commandBufferCount:             uint32_t = 3
    pCommandBuffers:                const VkCommandBuffer* = 0000000000AD9550
        pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
        pCommandBuffers[1]:             const VkCommandBuffer = 00000000053BA9C0
        pCommandBuffers[2]:             const VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0000000004A3BCC0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 00000000052D0030
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 3
    pCommandBuffers:                VkCommandBuffer* = 0000000000AD9550
        pCommandBuffers[0]:             VkCommandBuffer = 00000000053BAE30
        pCommandBuffers[1]:             VkCommandBuffer = 0000000006134340
        pCommandBuffers[2]:             VkCommandBuffer = 00000000053BA550

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BEA0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0000000005279060:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FB940
        framebuffer:                    VkFramebuffer = 00000000053C0A60
        renderArea:                     VkRect2D = 0000000005279080:
            offset:                         VkOffset2D = 0000000005279080:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0000000005279088:
                width:                          uint32_t = 800
                height:                         uint32_t = 600
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0000000005428EC0
            pClearValues[0]:                const VkClearValue = 0000000005428EC0 (Union):
                color:                          VkClearColorValue = 0000000005428EC0 (Union):
                    float32:                        float[4] = 0000000005428EC0
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0000000005428EC0
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0000000005428EC0
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0000000005428EC0:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 00000000053B8270

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BAE30

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0000000006134340
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BEA0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0000000006134340
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0000000005279470:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FB940
        framebuffer:                    VkFramebuffer = 00000000053C0D30
        renderArea:                     VkRect2D = 0000000005279490:
            offset:                         VkOffset2D = 0000000005279490:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0000000005279498:
                width:                          uint32_t = 800
                height:                         uint32_t = 600
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0000000005429140
            pClearValues[0]:                const VkClearValue = 0000000005429140 (Union):
                color:                          VkClearColorValue = 0000000005429140 (Union):
                    float32:                        float[4] = 0000000005429140
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0000000005429140
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0000000005429140
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0000000005429140:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0000000006134340
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 00000000053B8270

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0000000006134340
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0000000006134340

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0000000006134340

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0000000004A3BEA0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 4 (VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0000000005279420:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 00000000052FB940
        framebuffer:                    VkFramebuffer = 00000000053C0EE0
        renderArea:                     VkRect2D = 0000000005279440:
            offset:                         VkOffset2D = 0000000005279440:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0000000005279448:
                width:                          uint32_t = 800
                height:                         uint32_t = 600
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0000000005429940
            pClearValues[0]:                const VkClearValue = 0000000005429940 (Union):
                color:                          VkClearColorValue = 0000000005429940 (Union):
                    float32:                        float[4] = 0000000005429940
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0000000005429940
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0000000005429940
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0000000005429940:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 00000000053B8270

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000000053BA550

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000000053BA550

Thread 0, Frame 0:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278B68
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278B68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 0:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 1:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 1:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 1:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 1:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 2:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 2:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 2:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 2:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 3:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 3:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 3:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 3:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 4:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 4:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 4:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 4:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 5:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 5:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 5:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 5:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 6:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 6:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 6:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 6:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 7:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 7:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 7:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 7:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 8:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 8:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 8:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 8:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 9:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 9:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 9:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 9:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 10:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 10:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 10:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 10:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 11:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 11:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 11:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 11:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 12:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 12:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 12:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 12:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 13:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 13:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 13:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 13:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 14:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 14:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 14:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 14:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 15:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 15:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 15:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 15:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 16:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 16:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 16:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 16:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 17:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 17:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 17:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 17:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 18:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 18:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 18:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 18:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 19:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 19:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 19:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 19:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 20:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 20:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 20:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 20:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 21:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 21:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 21:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 21:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 22:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 22:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 22:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 22:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 23:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 23:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 23:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 23:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 24:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 24:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 24:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 24:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 25:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 25:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 25:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 25:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 26:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 26:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 26:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 26:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 27:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 27:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 27:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 27:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 28:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 28:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 28:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 28:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 29:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 29:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 29:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 29:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 30:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 30:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 30:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 30:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 31:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 31:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 31:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 31:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 32:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 32:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 32:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 32:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 33:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 33:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 33:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 33:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 34:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 34:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 34:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 34:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 35:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 35:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 35:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 35:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 36:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 36:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 36:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 36:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 37:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 37:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 37:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 37:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 38:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 38:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 38:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 38:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 39:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 39:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 39:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 39:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 40:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 40:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 40:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 40:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 41:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 41:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 41:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 41:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 42:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 42:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 42:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 42:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 43:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 43:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 43:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 43:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 44:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 44:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 44:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 44:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 45:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 45:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 45:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 45:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 46:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 46:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 46:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 46:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 47:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 47:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 47:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 47:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 48:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 48:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 48:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 48:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 49:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 49:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 49:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 49:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 50:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 50:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 50:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 50:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 51:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 51:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 51:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 51:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 52:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 52:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 52:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 52:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 53:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 53:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 53:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 53:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 54:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 54:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 54:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 54:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 55:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 55:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 55:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 55:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 56:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 56:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 56:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 56:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 57:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 57:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 57:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 57:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 58:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 58:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 58:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 58:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 59:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 59:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 59:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 59:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 60:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 60:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 60:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 60:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 61:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 61:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 61:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 61:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 62:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 62:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 62:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 62:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 63:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 63:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 63:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 63:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 64:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 64:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 64:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 64:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 65:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 65:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 65:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 65:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 66:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 66:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 66:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 66:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 67:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 67:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 67:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 67:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 68:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 68:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 68:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 68:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 69:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 69:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 69:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 69:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 70:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 70:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 70:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 70:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 71:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 71:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 71:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 71:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 72:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 72:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 72:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 72:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 73:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 73:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 73:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 73:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 74:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 74:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 74:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 74:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 75:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 75:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 75:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 75:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 76:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 76:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 76:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 76:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 77:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 77:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 77:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 77:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 78:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 78:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 78:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 78:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 79:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 79:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 79:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 79:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 80:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 80:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 80:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 80:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 81:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 81:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 81:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 81:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 82:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 82:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 82:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 82:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 83:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 83:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 83:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 83:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 84:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 84:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 84:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 84:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 85:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 85:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 85:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 85:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 86:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 86:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 86:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 86:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 87:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 87:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 87:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 87:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 88:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 88:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 88:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 88:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 89:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 89:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 89:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 89:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 90:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 90:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 90:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 90:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 91:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 91:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 91:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 91:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 92:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 92:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 92:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 92:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 93:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 93:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 93:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 93:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 94:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 94:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 94:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 94:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 95:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 95:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 95:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 95:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 96:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 96:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 96:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 96:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 97:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 97:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 97:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 97:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 98:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 98:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 98:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 98:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 99:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 99:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 99:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 99:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 100:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 100:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 100:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 100:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 101:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 101:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 101:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 101:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 102:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 102:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 102:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 102:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 103:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 103:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 103:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 103:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 104:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 104:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 104:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 104:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 105:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 105:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 105:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 105:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 106:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 106:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 106:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 106:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 107:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 107:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 107:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 107:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 108:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 108:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 108:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 108:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 109:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 109:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 109:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 109:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 110:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 110:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 110:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 110:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 111:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 111:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 111:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 111:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 112:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 112:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 112:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 112:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 113:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 113:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 113:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 113:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 114:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 114:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 114:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 114:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 115:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 115:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 115:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 115:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 116:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 116:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 116:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 116:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 117:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 117:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 117:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 117:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 118:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 118:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 118:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 118:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 119:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 119:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 119:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 119:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 120:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 120:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 120:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 120:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 121:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 121:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 121:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 121:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 122:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 122:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 122:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 122:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 123:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 123:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 123:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 123:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 124:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 124:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 124:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 124:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 125:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 125:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 125:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 125:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 126:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 126:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 126:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 126:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 127:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 127:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 127:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 127:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 128:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 128:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 128:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 128:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 129:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 129:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 129:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 129:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 130:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 130:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 130:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 130:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 131:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 131:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 131:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 131:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 132:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 132:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 132:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 132:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 133:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 133:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 133:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 133:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 134:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 134:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 134:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 134:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 135:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 135:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 135:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 135:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 136:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 136:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 136:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 136:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 137:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 137:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 137:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 137:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 138:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 138:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 138:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 138:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 139:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 139:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 139:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 139:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 140:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 140:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 140:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 140:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 141:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 141:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 141:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 141:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 142:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 142:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 142:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 142:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 143:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 143:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 143:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 143:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 144:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 144:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 144:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 144:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 145:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 145:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 145:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 145:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 146:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 146:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 146:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 146:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 147:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 147:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 147:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 147:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 148:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 148:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 148:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 148:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 149:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 149:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 149:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 149:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 150:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 150:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 150:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 150:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 151:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 151:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 151:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 151:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 152:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 152:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 152:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 152:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 153:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 153:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 153:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 153:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 154:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 154:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 154:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 154:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 155:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 155:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 155:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 155:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 156:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 156:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 156:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 156:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 157:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 157:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 157:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 157:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 158:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 158:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 158:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 158:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 159:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 159:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 159:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 159:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 160:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 160:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 160:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 160:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 161:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 161:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 161:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 161:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 162:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 162:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 162:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 162:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 163:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 163:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 163:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 163:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 164:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 164:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 164:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 164:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 165:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 165:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 165:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 165:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 166:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 166:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 166:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 166:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 167:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 167:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 167:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 167:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 168:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 168:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 168:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 168:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 169:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 169:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 169:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 169:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 170:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 170:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 170:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 170:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 171:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 171:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 171:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 171:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 172:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 172:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 172:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 172:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 173:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 173:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 173:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 173:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 174:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 174:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 174:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 174:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 175:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 175:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 175:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 175:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 176:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 176:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 176:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 176:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 177:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 177:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 177:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 177:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 178:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 178:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 178:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 178:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 179:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 179:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 179:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 179:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 180:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 180:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 180:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 180:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 181:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 181:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 181:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 181:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 182:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 182:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 182:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 182:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 183:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 183:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 183:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 183:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 184:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 184:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 184:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 184:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 185:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 185:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 185:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 185:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 186:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 186:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 186:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 186:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 187:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 187:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 187:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 187:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 188:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 188:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 188:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 188:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 189:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 189:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 189:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 189:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 190:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 190:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 190:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 190:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 191:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 191:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 191:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 191:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 192:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 192:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 192:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 192:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 193:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 193:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 193:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 193:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 194:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 194:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 194:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 194:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 195:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 195:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 195:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 195:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 196:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 196:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 196:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 196:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 197:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 197:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 197:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 197:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 198:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 198:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 198:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 198:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 199:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 199:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 199:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 199:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 200:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 200:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 200:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 200:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 201:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 201:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 201:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 201:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 202:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 202:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 202:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 202:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 203:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 203:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 203:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 203:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 204:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 204:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 204:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 204:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 205:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 205:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 205:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 205:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 206:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 206:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 206:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 206:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 207:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 207:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 207:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 207:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 208:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 208:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 208:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 208:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 209:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 209:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 209:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 209:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 210:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 210:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 210:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 210:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 211:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 211:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 211:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 211:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 212:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 212:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 212:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 212:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 213:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 213:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 213:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 213:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 214:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 214:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 214:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 214:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 215:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 215:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 215:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 215:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 216:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 216:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 216:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 216:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 217:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 217:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 217:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 217:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 218:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 218:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 218:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 218:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 219:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 219:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 219:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 219:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 220:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 220:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 220:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 220:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 221:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 221:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 221:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 221:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 222:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 222:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 222:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 222:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 223:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 223:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 223:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 223:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 224:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 224:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 224:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 224:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 225:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 225:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 225:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 225:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 226:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 226:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 226:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 226:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 227:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 227:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 227:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 227:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 228:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 228:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 228:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 228:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 229:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 229:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 229:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 229:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 230:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 230:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 230:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 230:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 231:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 231:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 231:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 231:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 232:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 232:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 232:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 232:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 233:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 233:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 233:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 233:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 234:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 234:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 234:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 234:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 235:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 235:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 235:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 235:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 236:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 236:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 236:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 236:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 237:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 237:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 237:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 237:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 238:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 238:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 238:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 238:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 239:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 239:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 239:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 239:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 240:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 240:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 240:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 240:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 241:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 241:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 241:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 241:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 242:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 242:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 242:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 242:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 243:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 243:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 243:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 243:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 244:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 244:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 244:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 244:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 245:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 245:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 245:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 245:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 246:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 246:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 246:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 246:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 247:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 247:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 247:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 247:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 248:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 248:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 248:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 248:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 249:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 249:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 249:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 249:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 250:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 250:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 250:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 250:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 251:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 251:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 251:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 251:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 252:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 252:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 252:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 252:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 253:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 253:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 253:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 253:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 254:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 254:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 254:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 254:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 255:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 255:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 255:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 255:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 256:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 256:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 256:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 256:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 257:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 257:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 257:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 257:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 258:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 258:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 258:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 258:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 259:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 259:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 259:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 259:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 260:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 260:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 260:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 260:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 261:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 261:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 261:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 261:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 262:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 262:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 262:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 262:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 263:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 263:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 263:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 263:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 264:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 264:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 264:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 264:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 265:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 265:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 265:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 265:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 266:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 266:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 266:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 266:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 267:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 267:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 267:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 267:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 268:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 268:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 268:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 268:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 269:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 269:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 269:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 269:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 270:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 270:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 270:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 270:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 271:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 271:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 271:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 271:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 272:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 272:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 272:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 272:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 273:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 273:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 273:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 273:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 274:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 274:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 274:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 274:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 275:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 275:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 275:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 275:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 276:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 276:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 276:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 276:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 277:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 277:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 277:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 277:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 278:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 278:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 278:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 278:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 279:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 279:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 279:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 279:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 280:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 280:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 280:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 280:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 281:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 281:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 281:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 281:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 282:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 282:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 282:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 282:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 283:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 283:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 283:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 283:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 284:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 284:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 284:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 284:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 285:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 285:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 285:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 285:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 286:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 286:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 286:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 286:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 287:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 287:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 287:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 287:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 288:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 288:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 288:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BAE30
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 288:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 289:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 289:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 289:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 0000000006134340
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 289:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 290:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 290:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 000000000529A960
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 290:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0000000005278BC8
        pSubmits[0]:                    const VkSubmitInfo = 0000000005278BC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0000000006133F70
                pWaitSemaphores[0]:             const VkSemaphore = 000000000529A960
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0000000006133F80
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0000000006133F90
                pCommandBuffers[0]:             const VkCommandBuffer = 00000000053BA550
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0000000006133FA0
                pSignalSemaphores[0]:           const VkSemaphore = 000000000529AA60
    fence:                          VkFence = 0000000000000000

Thread 0, Frame 290:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20
    pPresentInfo:                   const VkPresentInfoKHR* = 0000000005279510:
        sType:                          VkStructureType = UNKNOWN (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0000000006133F80
            pWaitSemaphores[0]:             const VkSemaphore = 000000000529AA60
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0000000006133F70
            pSwapchains[0]:                 const VkSwapchainKHR = 0000000004D4B7A0
        pImageIndices:                  const uint32_t* = 0000000006133FB0
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 291:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0000000005299D20

Thread 0, Frame 291:
vkDestroySemaphore(device, semaphore, pAllocator) returns void:
    device:                         VkDevice = 00000000052D6E50
    semaphore:                      VkSemaphore = 000000000529A960
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 291:
vkDestroySemaphore(device, semaphore, pAllocator) returns void:
    device:                         VkDevice = 00000000052D6E50
    semaphore:                      VkSemaphore = 000000000529AA60
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 291:
vkDestroyCommandPool(device, commandPool, pAllocator) returns void:
    device:                         VkDevice = 00000000052D6E50
    commandPool:                    VkCommandPool = 00000000052D0030
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 291:
vkDestroySwapchainKHR(device, swapchain, pAllocator) returns void:
    device:                         VkDevice = 00000000052D6E50
    swapchain:                      VkSwapchainKHR = 0000000004D4B7A0
    pAllocator:                     const VkAllocationCallbacks* = NULL

ObjectTracker(ERROR): object: 0x13 type: 9 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, DeviceMemory object 0x13 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x23 type: 9 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, DeviceMemory object 0x23 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x12 type: 11 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Image object 0x12 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x22 type: 11 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Image object 0x22 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x14 type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0x14 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0xc type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0xc has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x24 type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0x24 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x1d type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0x1d has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0xd type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0xd has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0xe type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0xe has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x1c type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0x1c has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x1e type: 15 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ImageView object 0x1e has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x3 type: 16 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ShaderModule object 0x3 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x4 type: 16 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, ShaderModule object 0x4 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x10 type: 18 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, PipelineLayout object 0x10 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x20 type: 18 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, PipelineLayout object 0x20 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0xf type: 19 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, RenderPass object 0xf has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x1f type: 19 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, RenderPass object 0x1f has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x11 type: 20 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Pipeline object 0x11 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x21 type: 20 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Pipeline object 0x21 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x2 type: 21 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, DescriptorSetLayout object 0x2 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x26 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x26 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x17 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x17 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x15 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x15 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x25 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x25 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x16 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x16 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x27 type: 25 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, Framebuffer object 0x27 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
ObjectTracker(ERROR): object: 0x8 type: 29 location: 383 msgCode: 49: OBJ ERROR : For device 0x52d6e50, SwapchainKHR object 0x8 has not been destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
Thread 0, Frame 291:
vkDestroyDevice(device, pAllocator) returns void:
    device:                         VkDevice = 00000000052D6E50
    pAllocator:                     const VkAllocationCallbacks* = NULL

Swapchain(ERROR): object: 0x52d6e50 type: 3 location: 731 msgCode: 49: vkDestroyDevice() called before all of its associated VkSwapchainKHRs were destroyed. For more information refer to Vulkan Spec Section '4.2.4. Device Destruction' which states 'All child objects created on device must have been destroyed prior to destroying device' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyDevice)
Thread 0, Frame 291:
vkDestroyInstance(instance, pAllocator) returns void:
    instance:                       VkInstance = 0000000001601BC0
    pAllocator:                     const VkAllocationCallbacks* = NULL

Swapchain(ERROR): object: 0x1601bc0 type: 1 location: 193 msgCode: 18: VkDestroyInstance() called before all of its associated VkSurfaceKHRs were destroyed. For more information refer to Vulkan Spec Section '3.2. Instances' which states 'All child objects created using instance must have been destroyed prior to destroying instance' (https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkDestroyInstance)
