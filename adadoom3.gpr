--
--
--
--
--
--
--
-- The windows version of gps does not come with a 64 bit version of gnatmake and when I search for MinGW
-- builds with 64 bit support they lack support for things like laddr2line (needed for -g flag). This makes
-- 64 bit builds effectively impossible for Windows users not used to commandline.
--
--
--
--
--
--
project AdaDoom3 is

  -------------
  -- Options --
  -------------
    type Option_System is(
      "SDL",
      "Linux",
--    "MacOS",
      "Windows");
    type Option_Processor is(
      "ARM",
      "PowerPC",
      "x86-64");
    type Option_Compiler is(
      "ObjectAda",
      "GNAT");
    type Option_Safety is(
      "On",
      "Some checks",
      "Off");
    type Option_Build is(
      "32-Bit",
      "64-Bit");
    type Option_Boolean is(
      "Yes",
      "No");

  ---------------
  -- Scenarios --
  ---------------
    -- In the GPS GUI scenarios are displayed with the latest External call on top (like a stack)
    -- Also, the parameters of External cannot contain spaces or punctuation other than a period or dash
    DEBUGGING : Option_Boolean   := External("Debugging",  "Yes");
    SAFETY    : Option_Safety    := External("Safety",     "On");
    BUILD     : Option_Build     := External("Build",      "32-Bit");
    COMPILER  : Option_Compiler  := External("Compiler",   "GNAT");
    PROCESSOR : Option_Processor := External("Processor",  "x86-64");
    SYSTEM    : Option_System    := External("System",     "Windows");

  ---------------
  -- Variables --
  ---------------
    Switch_Debugging_General := ();
    Switch_Debugging_Binder  := ();
    Switch_Build_64_Bit      := ();
    Switch_Builder           := ();
    Switch_Compiler          := ();
    Switch_Binder            := ();
    Switch_Linker            := ();
    Base                     := "Code";
    Separator                := "/";

  -----------
  -- Logic --
  -----------
    case SYSTEM is
      when "Windows" => Separator := "\";
--    when "MacOS"   => Separator := ":";
      when "Linux"   => Separator := "/";
    end case;
    case DEBUGGING is
      when "Yes" =>
        case COMPILER is
          when "GNAT" =>
            Switch_Debugging_General := ("-g"); -- Create extended information in stack traces
            Switch_Debugging_Binder  := ("-E"); -- Store traceback in exceptions
          when "ObjectAda" =>
            Switch_Debugging_General := ("");
            Switch_Debugging_Binder  := ("");
        end case;
      when "No"  => null;
    end case;
    case BUILD is
      when "64-Bit" =>
        case COMPILER is
          when "GNAT" =>
            Switch_Build_64_Bit := ("-m64");    -- Force 64 bit compilation
          when "ObjectAda" =>
            Switch_Build_64_Bit := ("");
        end case;
      when "32-Bit" => null;
    end case;
    case COMPILER is
      when "GNAT" =>
        Switch_Builder :=
          Switch_Debugging_General &(
          "-j4",                                -- Use four tasks during compilation
          "-k",                                 -- "Keep going", build as far as possible
          "-C",                                 -- Use mapping file
          "-s");                                -- Recompile if switches are changed
        Switch_Compiler :=
          Switch_Debugging_General &
          Switch_Build_64_Bit &(
          "-O3",                                -- Full optimization and automatic inlining
          "-gnato",                             -- Enable overflow checking for numerics
          "-fstack-check",                      -- Generate checks for exceeding the stack
          "-gnatW8",                            -- Enable unicode identifiers
          "-gnatE",                             -- Enable dynamic generic elaboration checks
          "-gnata",                             -- Enable pre and post conditions
          "-gnat2012");                         -- Enable the Ada 2012 extensions
        Switch_Binder :=
          Switch_Debugging_Binder;
        Switch_Linker :=
          Switch_Debugging_General &(
          "-fprofile-generate");                -- Generate code coverage
      when "ObjectAda" =>
        Switch_Builder :=
          Switch_Debugging_General;
        Switch_Compiler :=
          Switch_Debugging_General &
          Switch_Build_64_Bit;
        Switch_Binder :=
          Switch_Debugging_Binder;
        Switch_Linker :=
          Switch_Debugging_General;
    end case;

  -----------
  -- Tools --
  -----------

    -- Project
    for Source_Dirs use(
      Base,
      Base & Separator & SYSTEM,
      Base & Separator & COMPILER,
      Base & Separator & PROCESSOR);
    for Exec_Dir    use ".";
    for Object_Dir  use "Object";
    for Main        use ("main.adb");

    -- GPS
    package Ide is
      for Documentation_Dir use "Documentation";
    end Ide;

    package Builder is
      for Default_Switches("Ada") use Switch_Builder;
    end Builder;

    package Compiler is
      for Default_Switches("Ada") use Switch_Compiler;
    end Compiler;

    package Binder is
      for Default_Switches("Ada") use Switch_Binder;
    end Binder;

    package Linker is
      for Default_Switches("Ada") use Switch_Linker;
    end Linker;

end AdaDoom3;
